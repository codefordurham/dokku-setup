---
- name: Setup AWS infrastructure
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - vars/aws.yml
    - vars/aws_secrets.yml
  tasks:
    - name: get admin's public ip address
      ipify_facts:
    - name: generate cloudformation template.
      shell: python scripts/make_cf_template.py > files/cf_template.json
    - name: Launch cloudformation to create ec2, security group, and EIP.
      cloudformation:
        aws_access_key: "{{ cloudformation_access_key }}"
        aws_secret_key: "{{ cloudformation_secret_key }}"
        stack_name: "{{ stack_name }}"
        state: present
        region: "{{ aws_region }}"
        template: files/cf_template.json
        template_parameters:
          KeyName: "{{ key_name }}"
          Name: "{{ stack_name }}"
          SSHLocation: "0.0.0.0/0"
      register: cloudformation
    - name: "Setup route53 {{ dokku_host }}"
      route53:
        aws_access_key: "{{ route53_access_key }}"
        aws_secret_key: "{{ route53_secret_key }}"
        command: create
        overwrite: true
        zone: "{{ zone }}"
        record: "{{ dokku_host }}"
        type: A
        value: "{{ cloudformation.stack_outputs.InstanceIPAddress }}"
    - name: Wildcard subdomains for stack {{ wildcard_host }}
      route53:
        aws_access_key: "{{ route53_access_key }}"
        aws_secret_key: "{{ route53_secret_key }}"
        command: create
        overwrite: true
        zone: "{{ zone }}"
        record: "{{ wildcard_host }}"
        type: A
        value: "{{ cloudformation.stack_outputs.InstanceIPAddress }}"
    - name: Add instance to in-memory host group
      add_host:
        hostname: "{{ cloudformation.stack_outputs.InstanceIPAddress }}"
        groups: cloud_formation
    - name: Wait for SSH
      wait_for:
        host: "{{ cloudformation.stack_outputs.InstanceIPAddress }}"
        port: 22
        delay: 5
        timeout: 300
        state: started
- name: Setup ansible dependencies
  hosts: cloud_formation
  become: yes
  gather_facts: False
  vars_files:
    - vars/aws.yml
    - vars/aws_secrets.yml
  vars:
    ansible_ssh_private_key_file: "{{ ssh_private_key }}"
    ansible_host_key_checking: false
  pre_tasks:
  # If there is no python, install it before using other ansible packages
  - name: setup python symlink for ansible
    raw: which python || ln -s `which python3` /usr/bin/python
- name: Configure ec2 instance
  hosts: cloud_formation
  become: yes
  gather_facts: True
  vars_files:
    - vars/aws.yml
    - vars/aws_secrets.yml
  vars:
    ansible_ssh_private_key_file: "{{ ssh_private_key }}"
    ansible_host_key_checking: false
  roles:
  - role: swapfile
    swapfile_size: 3GB
    swapfile_swappiness: 10
  - role: tequila-common
    env_name: no_env_set
    project_name: dokku-stack
  - role: tequila-dokku
    dokku_hostname: "{{ zone }}"
  tasks:
  - name: Install Letsencrypt
    shell: dokku plugin:install https://github.com/dokku/dokku-letsencrypt.git
    args:
      creates: /var/lib/dokku/plugins/enabled/letsencrypt
